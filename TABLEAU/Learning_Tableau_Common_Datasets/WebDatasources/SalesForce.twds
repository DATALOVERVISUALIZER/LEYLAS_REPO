<!-- Based on
  http://www.salesforce.com/us/developer/docs/api_rest/Content/intro_understanding_user_agent_oauth_flow.htm -->
<!-- and https://developer.salesforce.com/page/Digging_Deeper_into_OAuth_2.0_on_Force.com -->
<twds-spec>
    <!-- Desktop Setup -->
    <setup>
        <required>
        </required>

        <collect>
            <item>CLIENTID</item>
            <item>CLIENTSECRET</item>
            <item>REDIRECT_URI</item>
            <item>SCOPE</item>
        </collect>

        <step-definition-s>
            <step-definition>
                <id>hardwire_client_id</id>
                <step action="hardwire_context_kvp">
                    <key>CLIENTID</key>
                    <value>3MVG9xOCXq4ID1uFXI2aas9gIL52HBWfIttnYV_KslGN1CA9Mp56I2Qx2u6AF2CMP55H4k9NOPvTPFm7MVE1E</value>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire_client_secret</id>
                <step action="hardwire_context_kvp">
                    <key>CLIENTSECRET</key>
                    <value>483677568580930347</value>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire_redirect_uri</id>
                <step action="hardwire_context_kvp">
                    <key>REDIRECT_URI</key>
                    <value type="simple">https://login.salesforce.com/services/oauth2/success</value>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire_scope</id>
                <step action="hardwire_context_kvp">
                    <!-- https://help.salesforce.com/apex/HTViewHelpDoc?id=remoteaccess_oauth_scopes.htm&language=en -->
                    <key>SCOPE</key>
                    <value>api id refresh_token</value>
                </step>
            </step-definition>

        </step-definition-s>


        <flow>
            <step id="hardwire_client_id"></step>
            <step id="hardwire_client_secret"></step>
            <step id="hardwire_redirect_uri"></step>
            <step id="hardwire_scope"></step>
        </flow>
    </setup>

    <!-- Server Setup -->
    <setup-server>
        <required>
        </required>

        <collect>
            <item>CLIENTID</item>
            <item>CLIENTSECRET</item>
            <item>REDIRECT_URI</item>
            <item>SCOPE</item>
        </collect>

        <step-definition-s>

            <step-definition>
                <id>hardwire_client_id</id>
                <step action="hardwire_context_kvp">
                    <key>CLIENTID</key>
                    <value>3MVG9xOCXq4ID1uFXI2aas9gILwivV8kmRZhJ6KEh.o3z5OecQoDmMh2psX1wWEaIfZ0Dvx_lB0o8oIas1J7G</value>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire_client_secret</id>
                <step action="hardwire_context_kvp">
                    <key>CLIENTSECRET</key>
                    <value>702194029161129322</value>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire_redirect_uri</id>
                <step action="hardwire_context_kvp">
                    <key>REDIRECT_URI</key>
                    <value type="simple">https://login.salesforce.com/services/oauth2/success</value>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire_scope</id>
                <step action="hardwire_context_kvp">
                    <!-- https://help.salesforce.com/apex/HTViewHelpDoc?id=remoteaccess_oauth_scopes.htm&language=en -->
                    <key>SCOPE</key>
                    <value>api id refresh_token</value>
                </step>
            </step-definition>

        </step-definition-s>


        <flow>
            <step id="hardwire_client_id"></step>
            <step id="hardwire_client_secret"></step>
            <step id="hardwire_redirect_uri"></step>
            <step id="hardwire_scope"></step>
        </flow>
    </setup-server>

    <!-- ### VALIDATION ### -->
    <validation>
        <required>
            <item>ACCESSTOKEN</item>
            <item>access-token-issue-time</item>
            <item>access-token-expires-in</item>
        </required>

        <collect>
        </collect>

        <step-definition-s>

            <step-definition>
                <id>validate-access-token</id>
                <step action="validate_token">
                    <token>
                        <value type="simple">ACCESSTOKEN</value>
                    </token>
                    <issue-time>
                        <value type="ref">access-token-issue-time</value>
                    </issue-time>
                    <!-- salesforce server flow doesn't provide the expires_in value -->
                    <!-- TODO: this should come from the context -->
                    <expires-in>
                        <value type="simple">3600</value>
                    </expires-in>
                </step>
            </step-definition>

        </step-definition-s>


        <flow>
            <step id="validate-access-token"></step>
        </flow>
    </validation>


    <!-- ### REVALIDATION ### -->
    <!-- https://help.salesforce.com/apex/HTViewHelpDoc?id=remoteaccess_oauth_refresh_token_flow.htm&language=en -->
    <revalidation>
        <required>
            <item>CLIENTID</item>
            <item>CLIENTSECRET</item>
            <item>REFRESHTOKEN</item>
            <item>server</item>
        </required>

        <collect>
            <item>ACCESSTOKEN</item>
            <item>access-token-expires-in</item>
            <item>access-token-issue-time</item>
            <item>instanceurl</item>
            <item>identityurl</item>
        </collect>

        <step-definition-s>


            <!-- Turn a refresh token into an Access Token -->
            <step-definition>
                <id>redeem-refresh-token</id>
                <step action="http_request">
                    <urlserver>
                        <value type="combined">
                            <value type="simple">https://</value>
                            <value type="ref">server</value>
                        </value>
                    </urlserver>
                    <urlpath>
                        <value type="simple">/services/oauth2/token</value>
                    </urlpath>
                    <port>443</port>
                    <method>POST</method>
                    <params>
                        <pair>
                            <key>grant_type</key>
                            <value type="simple">refresh_token</value>
                        </pair>
                        <pair>
                            <key>refresh_token</key>
                            <value type="ref">REFRESHTOKEN</value>
                        </pair>
                        <pair>
                            <key>client_id</key>
                            <value type="ref">CLIENTID</value>
                        </pair>
                        <pair>
                            <key>client_secret</key>
                            <value type="ref">CLIENTSECRET</value>
                        </pair>
                    </params>
                    <headers>
                        <pair>
                            <key>Content-Type</key>
                            <value type="simple">application/x-www-form-urlencoded</value>
                        </pair>
                    </headers>
                    <resultkey>refreshTokenJSON</resultkey>
                </step>
            </step-definition>

            <step-definition>
                <id>parse-redeemed-refresh-token</id>
                <step action="values_from_jsonpath">
                    <payloadkey>refreshTokenJSON</payloadkey>
                    <targets>
                        <pair>
                            <key>ACCESSTOKEN</key>
                            <value>$.access_token</value>
                        </pair>
                        <pair>
                            <key>identityurl</key>
                            <!-- TODO: fetch the user identity in case it has changed -->
                            <value>$.id</value>
                        </pair>
                        <pair>
                            <key>instanceurl</key>
                            <value>$.instance_url</value>
                        </pair>
                        <pair>
                            <key>access-token-issue-time</key>
                            <value>$.issued_at</value>
                        </pair>
                    </targets>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire-expires-in</id>
                <step action="hardwire_context_kvp">
                    <key>access-token-expires-in</key>
                    <value>3600</value>
                </step>
            </step-definition>

        </step-definition-s>
        <!-- TODO: we may want to update the user identity -->

        <flow>
            <step id="redeem-refresh-token"></step>
            <step id="parse-redeemed-refresh-token"></step>
            <step id="hardwire-expires-in"></step>
        </flow>
    </revalidation>

    <!-- ### AUTH step, assumes that we already have an auth code we can exchange for the access token and refresh token ### -->
    <auth>
        <required>
            <item>CLIENTID</item>
            <item>CLIENTSECRET</item>
            <item>REDIRECT_URI</item>
            <item>username</item>
            <item>server</item>
            <item>SCOPE</item>
        </required>
        <collect>
            <item>ACCESSTOKEN</item>
            <item>REFRESHTOKEN</item>
            <item>instanceurl</item>
            <item>identityurl</item>
            <item>access-token-issue-time</item>
            <item>access-token-expires-in</item>
            <item>SCOPE</item>
            <item>username</item>
            <item>userLanguage</item>
            <!-- $NOTE-fhernandez-2015-11-11 : Since we might end up changing the server at the webspec level if the user changes it
           to a custom one, we need to collect it to pass it up to the connection attributes.-->
            <item>server</item>
        </collect>
        <step-definition-s>

            <!-- Bring up the Embedded Browser so the User can grant us access to their data -->
            <step-definition>
                <id>get-auth-code</id>
                <step action="embedded_browser">
                    <url>
                        <value type="combined">
                            <value type="simple">https://</value>
                            <value type="ref">server</value>
                            <value type="simple">/services/oauth2/authorize</value>
                        </value>
                    </url>
                    <params>
                        <pair>
                            <key>scope</key>
                            <value type="ref">SCOPE</value>
                        </pair>
                        <pair>
                            <key>redirect_uri</key>
                            <value type="ref">REDIRECT_URI</value>
                        </pair>
                        <pair>
                            <key>response_type</key>
                            <value type="simple">code</value>
                        </pair>
                        <pair>
                            <key>client_id</key>
                            <value type="ref">CLIENTID</value>
                        </pair>
                        <pair>
                            <key>login_hint</key>
                            <value type="ref">username</value>
                        </pair>
                        <pair>
                            <key>display</key>
                            <value type="simple">popup</value>
                            <!-- Other options: touch/page -->
                        </pair>
                        <pair>
                            <key>prompt</key>
                            <value type="simple">consent</value>
                            <!--login%20consent-->
                        </pair>
                    </params>
                    <loc>title</loc>
                    <target>code</target>
                    <resultkey>auth-code</resultkey>
                </step>
            </step-definition>

            <!-- Once the user has granted us access, get the tokens from the OAuth service-->
            <!-- Obtain the returned value from the Browser.  This is a supported OAuth flow -->
            <step-definition>
                <id>get-access-and-refresh-token-step</id>
                <step action="http_request">
                    <urlserver>
                        <value type="combined">
                            <value type="simple">https://</value>
                            <value type="ref">server</value>
                        </value>
                    </urlserver>
                    <urlpath>
                        <value type="simple">/services/oauth2/token</value>
                    </urlpath>
                    <port>443</port>
                    <method>POST</method>
                    <params>
                        <pair>
                            <key>grant_type</key>
                            <value type="simple">authorization_code</value>
                        </pair>
                        <pair>
                            <key>code</key>
                            <value type="ref">auth-code</value>
                        </pair>
                        <pair>
                            <key>client_id</key>
                            <value type="ref">CLIENTID</value>
                        </pair>
                        <pair>
                            <key>client_secret</key>
                            <value type="ref">CLIENTSECRET</value>
                        </pair>
                        <pair>
                            <key>redirect_uri</key>
                            <value type="ref">REDIRECT_URI</value>
                        </pair>
                    </params>
                    <headers>
                        <pair>
                            <key>Content-Type</key>
                            <value type="simple">application/x-www-form-urlencoded</value>
                        </pair>
                    </headers>
                    <resultkey>accessTokenJSON</resultkey>
                </step>
            </step-definition>

            <step-definition>
                <id>parse-tokens</id>
                <step action="values_from_jsonpath">
                    <payloadkey>accessTokenJSON</payloadkey>
                    <targets>
                        <pair>
                            <key>ACCESSTOKEN</key>
                            <value>$.access_token</value>
                        </pair>
                        <pair>
                            <key>REFRESHTOKEN</key>
                            <value>$.refresh_token</value>
                        </pair>
                        <pair>
                            <key>identityurl</key>
                            <value>$.id</value>
                        </pair>
                        <pair>
                            <key>instanceurl</key>
                            <value>$.instance_url</value>
                        </pair>
                        <pair>
                            <key>access-token-issue-time</key>
                            <value>$.issued_at</value>
                        </pair>
                    </targets>
                </step>
            </step-definition>

            <!-- Use the ID_URL to get the username -->
            <!-- docs: https://help.salesforce.com/HTViewHelpDoc?id=remoteaccess_using_openid.htm&language=en_US -->
            <step-definition>
                <id>get-user-account</id>
                <step action="http_request">
                    <fullurl>
                        <value type="ref">identityurl</value>
                    </fullurl>
                    <method>GET</method>
                    <params>
                        <pair>
                            <key>id_token</key>
                            <value type="ref">id-token</value>
                        </pair>
                    </params>
                    <headers>
                        <pair>
                            <key>Authorization</key>
                            <value type="combined">
                                <value type="simple">Bearer </value>
                                <value type="ref">ACCESSTOKEN</value>
                            </value>
                        </pair>
                    </headers>
                    <resultkey>userAccountJSON</resultkey>
                </step>
            </step-definition>

            <step-definition>
                <id>parse-user-account</id>
                <step action="values_from_jsonpath">
                    <payloadkey>userAccountJSON</payloadkey>
                    <targets>
                        <pair>
                            <key>username</key>
                            <value>$.username</value>
                        </pair>
                        <pair>
                            <key>userLanguage</key>
                            <value>$.language</value>
                        </pair>
                    </targets>
                </step>
            </step-definition>

            <step-definition>
                <id>record-current-time</id>
                <step action="record_current_time">
                    <key>access-token-issue-time</key>
                </step>
            </step-definition>

            <step-definition>
                <id>hardwire-expires-in</id>
                <step action="hardwire_context_kvp">
                    <key>access-token-expires-in</key>
                    <value>3600</value>
                </step>
            </step-definition>
        </step-definition-s>

        <flow>
            <step id="get-auth-code"></step>
            <step id="get-access-and-refresh-token-step"></step>
            <step id="parse-tokens"></step>
            <step id="hardwire-expires-in"></step>
            <step id="get-user-account"></step>
            <step id="parse-user-account"></step>
        </flow>
    </auth>

    <!-- ### Identify ### -->
    <identify>
        <required>
            <item>identityurl</item>
            <item>ACCESSTOKEN</item>
        </required>
        <collect>
            <item>username</item>
            <item>userLanguage</item>
        </collect>

        <step-definition-s>

            <!-- Use the ID_URL to get the username -->
            <!-- docs: https://help.salesforce.com/HTViewHelpDoc?id=remoteaccess_using_openid.htm&language=en_US -->
            <step-definition>
                <id>get-user-account</id>
                <step action="http_request">
                    <fullurl>
                        <value type="ref">identityurl</value>
                    </fullurl>
                    <method>GET</method>
                    <params>
                        <pair>
                            <key>id_token</key>
                            <value type="ref">id-token</value>
                        </pair>
                    </params>
                    <headers>
                        <pair>
                            <key>Authorization</key>
                            <value type="combined">
                                <value type="simple">Bearer </value>
                                <value type="ref">ACCESSTOKEN</value>
                            </value>
                        </pair>
                    </headers>
                    <resultkey>userAccountJSON</resultkey>
                </step>
            </step-definition>

            <step-definition>
                <id>parse-user-account</id>
                <step action="values_from_jsonpath">
                    <payloadkey>userAccountJSON</payloadkey>
                    <targets>
                        <pair>
                            <key>username</key>
                            <value>$.username</value>
                        </pair>
                        <pair>
                            <key>userLanguage</key>
                            <value>$.language</value>
                        </pair>
                    </targets>
                </step>
            </step-definition>

        </step-definition-s>

        <flow>
            <step id="get-user-account"></step>
            <step id="parse-user-account"></step>
        </flow>

    </identify>
</twds-spec>
