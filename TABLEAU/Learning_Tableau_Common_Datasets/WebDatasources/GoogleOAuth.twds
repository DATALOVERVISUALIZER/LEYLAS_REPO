<twds-spec>

  <!-- ### VALIDATION ### -->
  <validation>
    <required>
      <item>ACCESSTOKEN</item>
      <item>access-token-issue-time</item>
      <item>access-token-expires-in</item>
      <item>CLIENTID</item>
      <item>CLIENTSECRET</item>
      <item>REDIRECT_URI</item>
    </required>

    <collect>
      <item>CLIENTID</item>
      <item>CLIENTSECRET</item>
      <item>REDIRECT_URI</item>
    </collect>

    <step-definition-s>

      <step-definition>
        <id>validate-access-token</id>
        <step action="validate_token">
          <token>
            <value type="simple">ACCESSTOKEN</value>
          </token>
          <issue-time>
            <value type="ref">access-token-issue-time</value>
          </issue-time>
          <expires-in>
            <value type="ref">access-token-expires-in</value>
          </expires-in>
        </step>
      </step-definition>

    </step-definition-s>


    <flow>
      <step id="validate-access-token"></step>
    </flow>
  </validation>


  <!-- ### REVALIDATION ### -->
  <revalidation>
    <required>
      <item>CLIENTID</item>
      <item>CLIENTSECRET</item>
      <item>REFRESHTOKEN</item>
    </required>

    <collect>
      <item>ACCESSTOKEN</item>
      <item>access-token-expires-in</item>
      <item>access-token-issue-time</item>
      <item>CLIENTID</item>
      <item>CLIENTSECRET</item>
      <item>REDIRECT_URI</item>
    </collect>

    <step-definition-s>


      <!-- Turn a refresh token into an Access Token -->
      <!--                                           -->
      <step-definition>
        <id>redeem-refresh-token</id>
        <step action="http_request">
          <urlserver>https://accounts.google.com</urlserver>
          <urlpath>
            <value type="simple">/o/oauth2/token</value>
          </urlpath>
          <port>443</port>
          <method>POST</method>
          <params>
            <pair>
              <key>grant_type</key>
              <value type="simple">refresh_token</value>
            </pair>
            <pair>
              <key>refresh_token</key>
              <value type="ref">REFRESHTOKEN</value>
            </pair>
            <pair>
              <key>client_id</key>
              <value type="ref">CLIENTID</value>
            </pair>
            <pair>
              <key>client_secret</key>
              <value type="ref">CLIENTSECRET</value>
            </pair>
          </params>
          <headers>
            <pair>
              <key>Content-Type</key>
              <value type="simple">application/x-www-form-urlencoded</value>
            </pair>
          </headers>
          <resultkey>refreshTokenJSON</resultkey>
        </step>
      </step-definition>

      <step-definition>
        <id>parse-redeemed-refresh-token</id>
        <step action="values_from_jsonpath">
          <payloadkey>refreshTokenJSON</payloadkey>
          <targets>
            <pair>
              <key>ACCESSTOKEN</key>
              <value>$.access_token</value>
            </pair>
            <pair>
              <key>access-token-expires-in</key>
              <value>$.expires_in</value>
            </pair>
          </targets>
        </step>
      </step-definition>

    </step-definition-s>

    <flow>
      <step id="redeem-refresh-token"></step>
      <step id="parse-redeemed-refresh-token"></step>
    </flow>
  </revalidation>

  <!-- ### AUTH ### -->
  <auth>
    <required>
      <item>CLIENTID</item>
      <item>CLIENTSECRET</item>
      <item>REDIRECT_URI</item>
      <item>SCOPE</item>
    </required>
    <collect>
      <item>ACCESSTOKEN</item>
      <item>REFRESHTOKEN</item>
      <item>access-token-issue-time</item>
      <item>access-token-expires-in</item>
      <item>id-token</item>
      <item>username</item>
      <item>CLIENTID</item>
      <item>CLIENTSECRET</item>
      <item>REDIRECT_URI</item>
    </collect>
    <step-definition-s>

      <step-definition>
        <id>hardwire_auth_code</id>
        <step action="hardwire_context_kvp">
          <key>auth-code</key>
          <value>4/yQBjyyTBpfWxZ6S1wY4pr-mVc7eK</value>
        </step>
      </step-definition>


      <!-- ### VALIDATION ### -->
      <step-definition>
        <id>check-access-code</id>
        <step action="check_context">
          <targets>
            <item>ACCESSTOKEN</item>
          </targets>
        </step>
      </step-definition>


      <!-- Bring up the Embedded Browser so the User can grant us access to their data -->
      <!--                                                                             -->
      <step-definition>
        <id>get-auth-code</id>
        <step action="embedded_browser">
          <url>https://accounts.google.com/o/oauth2/auth</url>
          <params>
            <pair>
              <key>scope</key>
              <value type="ref">SCOPE</value>
            </pair>
            <pair>
              <key>redirect_uri</key>
              <value type="ref">REDIRECT_URI</value>
            </pair>
            <pair>
              <key>response_type</key>
              <value type="simple">code</value>
            </pair>
            <pair>
              <key>client_id</key>
              <value type="ref">CLIENTID</value>
            </pair>
            <pair>
                <key>code_challenge_method</key>
                <value type="simple">S256</value>
            </pair>
            <pair>
              <key>access_type</key>
              <value type="simple">offline</value>
            </pair>
          </params>
          <loc>title</loc>
          <target>Success code</target>
          <resultkey>auth-code</resultkey>
        </step>
      </step-definition>

      <!-- Once the user has granted us access, get the tokens from OAuth -->
      <!-- Obtain the returned value from the Browser.  This is a supported OAuth flow -->
      <!--                                                                             -->
      <step-definition>
        <id>get-access-and-refresh-token-step</id>
        <step action="http_request">
          <urlserver>https://accounts.google.com</urlserver>
          <urlpath>
            <value type="simple">/o/oauth2/token</value>
          </urlpath>
          <port>443</port>
          <method>POST</method>
          <params>
            <pair>
              <key>grant_type</key>
              <value type="simple">authorization_code</value>
            </pair>
            <pair>
              <key>code</key>
              <value type="ref">auth-code</value>
            </pair>
            <pair>
              <key>code_verifier</key>
              <value type="ref">code_verifier</value>
            </pair>
            <pair>
              <key>client_id</key>
              <value type="ref">CLIENTID</value>
            </pair>
            <pair>
              <key>client_secret</key>
              <value type="ref">CLIENTSECRET</value>
            </pair>
            <pair>
              <key>redirect_uri</key>
              <value type="ref">REDIRECT_URI</value>
            </pair>
          </params>
          <headers>
            <pair>
              <key>Content-Type</key>
              <value type="simple">application/x-www-form-urlencoded</value>
            </pair>
          </headers>
          <resultkey>accessTokenJSON</resultkey>
        </step>
      </step-definition>


      <step-definition>
        <id>parse-tokens</id>
        <step action="values_from_jsonpath">
          <payloadkey>accessTokenJSON</payloadkey>
          <targets>
            <pair>
              <key>ACCESSTOKEN</key>
              <value>$.access_token</value>
            </pair>
            <pair>
              <key>REFRESHTOKEN</key>
              <value>$.refresh_token</value>
            </pair>
            <pair>
              <key>access-token-expires-in</key>
              <value>$.expires_in</value>
            </pair>
            <pair>
              <key>id-token</key>
              <value>$.id_token</value>
            </pair>
          </targets>
        </step>
      </step-definition>


      <!-- Use the id-token to get the username -->
      <!--                                                                             -->
      <step-definition>
        <id>get-user-account</id>
        <step action="http_request">
          <urlserver>https://www.googleapis.com</urlserver>
          <urlpath>
            <value type="simple">/oauth2/v1/userinfo</value>
          </urlpath>
          <port>443</port>
          <method>GET</method>
          <params>
            <pair>
              <key>id_token</key>
              <value type="ref">id-token</value>
            </pair>
          </params>
          <headers>
            <pair>
              <key>Authorization</key>
              <value type="combined">
                <value type="simple">OAuth </value>
                <value type="ref">ACCESSTOKEN</value>
              </value>
            </pair>
          </headers>
          <resultkey>userAccountJSON</resultkey>
        </step>
      </step-definition>


      <step-definition>
        <id>parse-user-account</id>
        <step action="values_from_jsonpath">
          <payloadkey>userAccountJSON</payloadkey>
          <targets>
            <pair>
              <key>username</key>
              <value>$.email</value>
            </pair>
          </targets>
        </step>
      </step-definition>


      <step-definition>
        <id>record-current-time</id>
        <step action="record_current_time">
          <key>access-token-issue-time</key>
        </step>
      </step-definition>
    </step-definition-s>

    <flow>
      <!-- <step id="check-access-code"></step> -->
      <step id="get-auth-code"></step>
      <!--
          <step id="hardwire_auth_code"></step>
          -->
      <step id="get-access-and-refresh-token-step"></step>
      <step id="parse-tokens"></step>
      <step id="record-current-time"></step>
      <step id="get-user-account"></step>
      <step id="parse-user-account"></step>

    </flow>

  </auth>

  <!-- ### Identify ### -->
  <identify>
    <required>
      <item>CLIENTID</item>
      <item>CLIENTSECRET</item>
      <item>ACCESSTOKEN</item>
    </required>
    <collect>
      <item>username</item>
    </collect>

    <step-definition-s>

      <!-- Use the id-token to get the username -->
      <!--                                                                             -->
      <step-definition>
        <id>get-user-account</id>
        <step action="http_request">
          <urlserver>https://www.googleapis.com</urlserver>
          <urlpath>
            <value type="simple">/oauth2/v1/userinfo</value>
          </urlpath>
          <port>443</port>
          <method>GET</method>
          <params>
          </params>
          <headers>
            <pair>
              <key>Authorization</key>
              <value type="combined">
                <value type="simple">OAuth </value>
                <value type="ref">ACCESSTOKEN</value>
              </value>
            </pair>
          </headers>
          <resultkey>userAccountJSON</resultkey>
        </step>
      </step-definition>


      <step-definition>
        <id>parse-user-account</id>
        <step action="values_from_jsonpath">
          <payloadkey>userAccountJSON</payloadkey>
          <targets>
            <pair>
              <key>username</key>
              <value>$.email</value>
            </pair>
          </targets>
        </step>
      </step-definition>

    </step-definition-s>

    <flow>
      <step id="get-user-account"></step>
      <step id="parse-user-account"></step>
    </flow>

  </identify>

  <!-- ### Revoke ### -->
  <!-- B102038, B102040 - This endpoint seems to invalidate the Google user's other refresh tokens issued for the same OAuth app -->
  <revoke>
    <required>
      <item>REFRESHTOKEN</item>
    </required>
    <collect>
    </collect>

    <step-definition-s>

      <!-- Revoke the refresh token -->
      <!--                                                                             -->
      <step-definition>
        <id>revoke-token</id>
        <step action="http_request">
          <urlserver>https://accounts.google.com</urlserver>
          <urlpath>
            <value type="simple">/o/oauth2/revoke</value>
          </urlpath>
          <port>443</port>
          <method>GET</method>
          <params>
            <pair>
              <key>token</key>
              <value type="ref">REFRESHTOKEN</value>
            </pair>
          </params>
          <headers>
          </headers>
          <resultkey>emptyResponse</resultkey>
        </step>
      </step-definition>

    </step-definition-s>

    <flow>
      <step id="revoke-token"></step>
    </flow>

  </revoke>

</twds-spec>
